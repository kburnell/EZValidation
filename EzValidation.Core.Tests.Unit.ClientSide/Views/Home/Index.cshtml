@using EzValidation.Core.Tests.Unit.Shared.ViewModels
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model ValidationViewModel

<script type="text/javascript">
    Sys.Application.add_load(function () {
        $("form").get(0)[Sys.Mvc.FormContext._formValidationTag].validate("submit");

        module("EzValidation");

        test("Equal - Strings (Valid)", function () {
            ok(!$("#EqualModelOfStrings_Valid_Val2").hasClass("input-validation-error"), "Val1 = Val2");
            ok(!$("#EqualModelOfStrings_Valid_Val1").hasClass("input-validation-error"), "Val1 = Specific Value");
            ok(!$("#EqualModelOfStrings_Valid_Val3").hasClass("input-validation-error"), "Val3 = Current Date");
            ok(!$("#EqualModelOfStrings_Valid_Val4").hasClass("input-validation-error"), "Val4 = Yesterdays Date");
            ok(!$("#EqualModelOfStrings_Valid_Val5").hasClass("input-validation-error"), "Val5 = Tomorrows Date");
        });
        test("Equal - Strings (Invalid)", function () {
            ok($("#EqualModelOfStrings_Invalid_Val2").hasClass("input-validation-error"), "Val1 != Val2");
            ok($("#EqualModelOfStrings_Invalid_Val1").hasClass("input-validation-error"), "Val1 != Specific Value");
            ok($("#EqualModelOfStrings_Invalid_Val3").hasClass("input-validation-error"), "Val3 != Current Date");
            ok($("#EqualModelOfStrings_Invalid_Val4").hasClass("input-validation-error"), "Val4 != Yesterdays Date");
            ok($("#EqualModelOfStrings_Invalid_Val5").hasClass("input-validation-error"), "Val5 != Tomorrows Date");
        });
        test("Equal - Longs (Valid)", function () {
            ok(!$("#EqualModelOfLongs_Valid_Val2").hasClass("input-validation-error"), "Val1 = Val2");
            ok(!$("#EqualModelOfLongs_Valid_Val1").hasClass("input-validation-error"), "Val1 = Specific Value");
            ok(!$("#EqualModelOfLongs_Valid_Val4").hasClass("input-validation-error"), "Val3 = Val4 (Both Null)");
        });
        test("Equal - Longs (Invalid)", function () {
            ok($("#EqualModelOfLongs_Invalid_Val2").hasClass("input-validation-error"), "Val1 != Val2");
            ok($("#EqualModelOfLongs_Invalid_Val1").hasClass("input-validation-error"), "Val1 != Specific Value");
            ok($("#EqualModelOfLongs_Invalid_Val4").hasClass("input-validation-error"), "Val3 != Val4 (Val3 = NULL)");
        });
        test("Equal - Dates (Valid)", function () {
            ok(!$("#EqualModelOfDates_Valid_Val2").hasClass("input-validation-error"), "Val1 = Val2");
            ok(!$("#EqualModelOfDates_Valid_Val1").hasClass("input-validation-error"), "Val1 = Specific Value");
            ok(!$("#EqualModelOfDates_Valid_Val3").hasClass("input-validation-error"), "Val3 = Current Date");
            ok(!$("#EqualModelOfDates_Valid_Val5").hasClass("input-validation-error"), "Val4 = Val5 (Both Null)");
            ok(!$("#EqualModelOfDates_Valid_Val6").hasClass("input-validation-error"), "Val6 = Yesterdays Date");
            ok(!$("#EqualModelOfDates_Valid_Val7").hasClass("input-validation-error"), "Val7 = Tomorrows Date");
        });
        test("Equal - Dates (Invalid)", function () {
            ok($("#EqualModelOfDates_Invalid_Val2").hasClass("input-validation-error"), "Val1 != Val2");
            ok($("#EqualModelOfDates_Invalid_Val1").hasClass("input-validation-error"), "Val1 != Specific Value");
            ok($("#EqualModelOfDates_Invalid_Val3").hasClass("input-validation-error"), "Val3 != Current Date");
            ok($("#EqualModelOfDates_Invalid_Val6").hasClass("input-validation-error"), "Val6 != Yesterdays Date");
            ok($("#EqualModelOfDates_Invalid_Val7").hasClass("input-validation-error"), "Val7 != Tomorrows Date");
        });

        test("Not Equal - Strings (Valid)", function () {
            ok(!$("#NotEqualModelOfStrings_Valid_Val2").hasClass("input-validation-error"), "Val1 != Val2");
            ok(!$("#NotEqualModelOfStrings_Valid_Val1").hasClass("input-validation-error"), "Val1 != Specific Value");
            ok(!$("#NotEqualModelOfStrings_Valid_Val3").hasClass("input-validation-error"), "Val3 != Current Date");
        });
        test("Not Equal - Strings (Invalid)", function () {
            ok($("#NotEqualModelOfStrings_Invalid_Val2").hasClass("input-validation-error"), "Val1 = Val2");
            ok($("#NotEqualModelOfStrings_Invalid_Val1").hasClass("input-validation-error"), "Val1 = Specific Value");
            ok($("#NotEqualModelOfStrings_Invalid_Val3").hasClass("input-validation-error"), "Val3 = Current Date");
        });
        test("Not Equal - Longs (Valid)", function () {
            ok(!$("#NotEqualModelOfLongs_Valid_Val2").hasClass("input-validation-error"), "Val1 != Val2");
            ok(!$("#NotEqualModelOfLongs_Valid_Val1").hasClass("input-validation-error"), "Val1 != Specific Value");
            ok(!$("#NotEqualModelOfLongs_Valid_Val4").hasClass("input-validation-error"), "Val3 != Val4 (Val3 = NULL)");
        });
        test("Not Equal - Longs (Invalid)", function () {
            ok($("#NotEqualModelOfLongs_Invalid_Val2").hasClass("input-validation-error"), "Val1 = Val2");
            ok($("#NotEqualModelOfLongs_Invalid_Val1").hasClass("input-validation-error"), "Val1 = Specific Value");
            ok($("#NotEqualModelOfLongs_Invalid_Val4").hasClass("input-validation-error"), "Val3 = Val4");
        });
        test("Not Equal - Dates (Valid)", function () {
            ok(!$("#NotEqualModelOfDates_Valid_Val2").hasClass("input-validation-error"), "Val1 != Val2");
            ok(!$("#NotEqualModelOfDates_Valid_Val1").hasClass("input-validation-error"), "Val1 != Specific Value");
            ok(!$("#NotEqualModelOfDates_Valid_Val3").hasClass("input-validation-error"), "Val3 != Current Date");
            ok(!$("#NotEqualModelOfDates_Valid_Val5").hasClass("input-validation-error"), "Val4 != Val3 (Val4 = NULL");
        });
        test("Not Equal - Dates (Invalid)", function () {
            ok($("#NotEqualModelOfDates_Invalid_Val2").hasClass("input-validation-error"), "Val1 = Val2");
            ok($("#NotEqualModelOfDates_Invalid_Val1").hasClass("input-validation-error"), "Val1 = Specific Value");
            ok($("#NotEqualModelOfDates_Invalid_Val3").hasClass("input-validation-error"), "Val3 = Current Date");
            ok($("#NotEqualModelOfDates_Invalid_Val5").hasClass("input-validation-error"), "Val4 = Val5 (Both NULL)");
        });

        test("Greater - Longs (Valid)", function () {
            ok(!$("#GreaterModelOfLongs_Valid_Val2").hasClass("input-validation-error"), "Val1 > Val2");
            ok(!$("#GreaterModelOfLongs_Valid_Val1").hasClass("input-validation-error"), "Val1 > Specific Value");
        });
        test("Greater - Longs (Invalid)", function () {
            ok($("#GreaterModelOfLongs_Invalid_Val2").hasClass("input-validation-error"), "Val1 !> Val2");
            ok($("#GreaterModelOfLongs_Invalid_Val1").hasClass("input-validation-error"), "Val1 !> Specific Value");
            ok($("#GreaterModelOfLongs_Invalid_Val3").hasClass("input-validation-error"), "Val3 !> Val2 (Val3 = Val2)");
        });
        test("Greater - Dates (Valid)", function () {
            ok(!$("#GreaterModelOfDates_Valid_Val2").hasClass("input-validation-error"), "Val1 > Val2");
            ok(!$("#GreaterModelOfDates_Valid_Val1").hasClass("input-validation-error"), "Val1 > Specific Value");
            ok(!$("#GreaterModelOfDates_Valid_Val3").hasClass("input-validation-error"), "Val3 > Current Date");
        });
        test("Greater - Dates (Invalid)", function () {
            ok($("#GreaterModelOfDates_Invalid_Val2").hasClass("input-validation-error"), "Val1 !> Val2");
            ok($("#GreaterModelOfDates_Invalid_Val1").hasClass("input-validation-error"), "Val1 !> Specific Value");
            ok($("#GreaterModelOfDates_Invalid_Val3").hasClass("input-validation-error"), "Val3 !> Current Date");
            ok($("#GreaterModelOfDates_Invalid_Val4").hasClass("input-validation-error"), "Val4 !> Val3 (Val4 = Val3)");
        });
        test("Greater - Dates As Strings (Valid)", function () {
            ok(!$("#GreaterModelOfDatesAsStrings_Valid_Val2").hasClass("input-validation-error"), "Val1 > Val2");
            ok(!$("#GreaterModelOfDatesAsStrings_Valid_Val1").hasClass("input-validation-error"), "Val1 > Specific Value");
            ok(!$("#GreaterModelOfDatesAsStrings_Valid_Val3").hasClass("input-validation-error"), "Val3 > Current Date");
        });
        test("Greater - Dates As Strings (Invalid)", function () {
            ok($("#GreaterModelOfDatesAsStrings_Invalid_Val2").hasClass("input-validation-error"), "Val1 !> Val2");
            ok($("#GreaterModelOfDatesAsStrings_Invalid_Val1").hasClass("input-validation-error"), "Val1 !> Specific Value");
            ok($("#GreaterModelOfDatesAsStrings_Invalid_Val3").hasClass("input-validation-error"), "Val3 !> Current Date");
            ok($("#GreaterModelOfDatesAsStrings_Invalid_Val4").hasClass("input-validation-error"), "Val4 !> Val3 (Val4 = Val3)");
        });

        test("Less - Longs (Valid)", function () {
            ok(!$("#LessModelOfLongs_Valid_Val2").hasClass("input-validation-error"), "Val1 < Val2");
            ok(!$("#LessModelOfLongs_Valid_Val1").hasClass("input-validation-error"), "Val1 < Specific Value");
        });
        test("Less - Longs (Invalid)", function () {
            ok($("#LessModelOfLongs_Invalid_Val2").hasClass("input-validation-error"), "Val1 !< Val2");
            ok($("#LessModelOfLongs_Invalid_Val1").hasClass("input-validation-error"), "Val1 !< Specific Value");
            ok($("#LessModelOfLongs_Invalid_Val3").hasClass("input-validation-error"), "Val3 !< Val2 (Val2 = Val3)");
        });
        test("Less - Dates (Valid)", function () {
            ok(!$("#LessModelOfDates_Valid_Val2").hasClass("input-validation-error"), "Val1 < Val2");
            ok(!$("#LessModelOfDates_Valid_Val1").hasClass("input-validation-error"), "Val1 < Specific Value");
            ok(!$("#LessModelOfDates_Valid_Val3").hasClass("input-validation-error"), "Val3 < Current Date");
        });
        test("Less - Dates (Invalid)", function () {
            ok($("#LessModelOfDates_Invalid_Val2").hasClass("input-validation-error"), "Val1 !< Val2");
            ok($("#LessModelOfDates_Invalid_Val1").hasClass("input-validation-error"), "Val1 !< Specific Value");
            ok($("#LessModelOfDates_Invalid_Val3").hasClass("input-validation-error"), "Val3 !< Current Date");
            ok($("#LessModelOfDates_Invalid_Val4").hasClass("input-validation-error"), "Val4 !< Val3 (Val4 = Val3)");
        });
        test("Less - Dates As Strings (Valid)", function () {
            ok(!$("#LessModelOfDatesAsStrings_Valid_Val2").hasClass("input-validation-error"), "Val1 < Val2");
            ok(!$("#LessModelOfDatesAsStrings_Valid_Val1").hasClass("input-validation-error"), "Val1 < Specific Value");
            ok(!$("#LessModelOfDatesAsStrings_Valid_Val3").hasClass("input-validation-error"), "Val3 < Current Date");
        });
        test("Less - Dates As Strings (Invalid)", function () {
            ok($("#LessModelOfDatesAsStrings_Invalid_Val2").hasClass("input-validation-error"), "Val1 !< Val2");
            ok($("#LessModelOfDatesAsStrings_Invalid_Val1").hasClass("input-validation-error"), "Val1 !< Specific Value");
            ok($("#LessModelOfDatesAsStrings_Invalid_Val3").hasClass("input-validation-error"), "Val3 !< Current Date");
            ok($("#LessModelOfDatesAsStrings_Invalid_Val4").hasClass("input-validation-error"), "Val4 !< Val3 (Val4 = Val3)");
        });

        test("GreaterOrEqual - Longs (Valid)", function () {
            ok(!$("#GreaterOrEqualModelOfLongs_Valid_Val2").hasClass("input-validation-error"), "Val1 >= Val2");
            ok(!$("#GreaterOrEqualModelOfLongs_Valid_Val1").hasClass("input-validation-error"), "Val1 >= Specific Value");
            ok(!$("#GreaterOrEqualModelOfLongs_Valid_Val3").hasClass("input-validation-error"), "Val3 >= Val2 (Val3 = Val2)");
        });
        test("GreaterOrEqual - Longs (Invalid)", function () {
            ok($("#GreaterOrEqualModelOfLongs_Invalid_Val2").hasClass("input-validation-error"), "Val1 !>= Val2");
            ok($("#GreaterOrEqualModelOfLongs_Invalid_Val1").hasClass("input-validation-error"), "Val1 !>= Specific Value");
        });
        test("GreaterOrEqual - Dates (Valid)", function () {
            ok(!$("#GreaterOrEqualModelOfDates_Valid_Val2").hasClass("input-validation-error"), "Val1 >= Val2");
            ok(!$("#GreaterOrEqualModelOfDates_Valid_Val1").hasClass("input-validation-error"), "Val1 >= Specific Value");
            ok(!$("#GreaterOrEqualModelOfDates_Valid_Val3").hasClass("input-validation-error"), "Val3 >= Current Date");
            ok(!$("#GreaterOrEqualModelOfDates_Valid_Val4").hasClass("input-validation-error"), "Val4 >= Val3 (Val4 = Val3)");
        });
        test("GreaterOrEqual - Dates (Invalid)", function () {
            ok($("#GreaterOrEqualModelOfDates_Invalid_Val2").hasClass("input-validation-error"), "Val1 !>= Val2");
            ok($("#GreaterOrEqualModelOfDates_Invalid_Val1").hasClass("input-validation-error"), "Val1 !>= Specific Value");
            ok($("#GreaterOrEqualModelOfDates_Invalid_Val3").hasClass("input-validation-error"), "Val3 !>= Current Date");
        });
        test("GreaterOrEqual - Dates As Strings (Valid)", function () {
            ok(!$("#GreaterOrEqualModelOfDatesAsStrings_Valid_Val2").hasClass("input-validation-error"), "Val1 >= Val2");
            ok(!$("#GreaterOrEqualModelOfDatesAsStrings_Valid_Val1").hasClass("input-validation-error"), "Val1 >= Specific Value");
            ok(!$("#GreaterOrEqualModelOfDatesAsStrings_Valid_Val3").hasClass("input-validation-error"), "Val3 >= Current Date");
            ok(!$("#GreaterOrEqualModelOfDatesAsStrings_Valid_Val4").hasClass("input-validation-error"), "Val4 >= Val3 (Val4 = Val3)");
        });
        test("GreaterOrEqual - Dates As Strings (Invalid)", function () {
            ok($("#GreaterOrEqualModelOfDatesAsStrings_Invalid_Val2").hasClass("input-validation-error"), "Val1 !> Val2");
            ok($("#GreaterOrEqualModelOfDatesAsStrings_Invalid_Val1").hasClass("input-validation-error"), "Val1 !> Specific Value");
            ok($("#GreaterOrEqualModelOfDatesAsStrings_Invalid_Val3").hasClass("input-validation-error"), "Val3 !> Current Date");
        });

        test("LessOrEqual - Longs (Valid)", function () {
            ok(!$("#LessOrEqualModelOfLongs_Valid_Val2").hasClass("input-validation-error"), "Val1 <= Val2");
            ok(!$("#LessOrEqualModelOfLongs_Valid_Val1").hasClass("input-validation-error"), "Val1 <= Specific Value");
            ok(!$("#LessOrEqualModelOfLongs_Valid_Val3").hasClass("input-validation-error"), "Val3 <= Val2 (Val2 = Val3)");
        });
        test("LessOrEqual - Longs (Invalid)", function () {
            ok($("#LessOrEqualModelOfLongs_Invalid_Val2").hasClass("input-validation-error"), "Val1 !<= Val2");
            ok($("#LessOrEqualModelOfLongs_Invalid_Val1").hasClass("input-validation-error"), "Val1 !<= Specific Value");
        });
        test("LessOrEqual - Dates (Valid)", function () {
            ok(!$("#LessOrEqualModelOfDates_Valid_Val2").hasClass("input-validation-error"), "Val1 <= Val2");
            ok(!$("#LessOrEqualModelOfDates_Valid_Val1").hasClass("input-validation-error"), "Val1 <= Specific Value");
            ok(!$("#LessOrEqualModelOfDates_Valid_Val3").hasClass("input-validation-error"), "Val3 <= Current Date");
            ok(!$("#LessOrEqualModelOfDates_Valid_Val4").hasClass("input-validation-error"), "Val4 <= Val3 (Val4 = Val3)");
        });
        test("LessOrEqual - Dates (Invalid)", function () {
            ok($("#LessOrEqualModelOfDates_Invalid_Val2").hasClass("input-validation-error"), "Val1 !<= Val2");
            ok($("#LessOrEqualModelOfDates_Invalid_Val1").hasClass("input-validation-error"), "Val1 !<= Specific Value");
            ok($("#LessOrEqualModelOfDates_Invalid_Val3").hasClass("input-validation-error"), "Val3 !<= Current Date");
        });
        test("LessOrEqual - Dates As Strings (Valid)", function () {
            ok(!$("#LessOrEqualModelOfDatesAsStrings_Valid_Val2").hasClass("input-validation-error"), "Val1 <= Val2");
            ok(!$("#LessOrEqualModelOfDatesAsStrings_Valid_Val1").hasClass("input-validation-error"), "Val1 <= Specific Value");
            ok(!$("#LessOrEqualModelOfDatesAsStrings_Valid_Val3").hasClass("input-validation-error"), "Val3 <= Current Date");
            ok(!$("#LessOrEqualModelOfDatesAsStrings_Invalid_Val4").hasClass("input-validation-error"), "Val4 <= Val3 (Val4 = Val3)");
        });
        test("LessOrEqual - Dates As Strings (Invalid)", function () {
            ok($("#LessOrEqualModelOfDatesAsStrings_Invalid_Val2").hasClass("input-validation-error"), "Val1 !<= Val2");
            ok($("#LessOrEqualModelOfDatesAsStrings_Invalid_Val1").hasClass("input-validation-error"), "Val1 !<= Specific Value");
            ok($("#LessOrEqualModelOfDatesAsStrings_Invalid_Val3").hasClass("input-validation-error"), "Val3 !<= Current Date");
        });
        

    });                    
    </script>
    @{Html.EnableClientValidation(true);}
    <h1 id="qunit-header">EzValidation Client Side Tests</h1>
    <h2 id="qunit-banner"></h2>
    <h2 id="qunit-userAgent"></h2>
    <ol id="qunit-tests"></ol>
    <div style="display:none">
    <!-- <div> -->
        @using (Html.BeginForm())
        { 
            <!-- Equal -->
            <p>[Equal/Strings/Valid]</p>
            <div>
                @Html.EditorFor(m => m.EqualModelOfStrings_Valid.Val1)
                @Html.ValidationMessageFor(m => m.EqualModelOfStrings_Valid.Val1)<br/>
                @Html.EditorFor(m => m.EqualModelOfStrings_Valid.Val2)
                @Html.ValidationMessageFor(m => m.EqualModelOfStrings_Valid.Val2)<br/>
                @Html.EditorFor(m => m.EqualModelOfStrings_Valid.Val3)
                @Html.ValidationMessageFor(m => m.EqualModelOfStrings_Valid.Val3)<br />
                @Html.EditorFor(m => m.EqualModelOfStrings_Valid.Val4)
                @Html.ValidationMessageFor(m => m.EqualModelOfStrings_Valid.Val4)<br />
                @Html.EditorFor(m => m.EqualModelOfStrings_Valid.Val5)
                @Html.ValidationMessageFor(m => m.EqualModelOfStrings_Valid.Val5)<br />
            </div>
            <br />
            <p>[Equal/Strings/Invalid]</p>
            <div>
                @Html.EditorFor(m => m.EqualModelOfStrings_Invalid.Val1)
                @Html.ValidationMessageFor(m => m.EqualModelOfStrings_Invalid.Val1)<br/>
                @Html.EditorFor(m => m.EqualModelOfStrings_Invalid.Val2)
                @Html.ValidationMessageFor(m => m.EqualModelOfStrings_Invalid.Val2)<br/>
                @Html.EditorFor(m => m.EqualModelOfStrings_Invalid.Val3)
                @Html.ValidationMessageFor(m => m.EqualModelOfStrings_Invalid.Val3)<br/>
                @Html.EditorFor(m => m.EqualModelOfStrings_Invalid.Val4)
                @Html.ValidationMessageFor(m => m.EqualModelOfStrings_Invalid.Val4)<br/>
                @Html.EditorFor(m => m.EqualModelOfStrings_Invalid.Val5)
                @Html.ValidationMessageFor(m => m.EqualModelOfStrings_Invalid.Val5)<br/>
            </div>
            <br />
            <p>[Equal/Longs/Valid]</p>
            <div>
                @Html.EditorFor(m => m.EqualModelOfLongs_Valid.Val1)
                @Html.ValidationMessageFor(m => m.EqualModelOfLongs_Valid.Val1)<br/>
                @Html.EditorFor(m => m.EqualModelOfLongs_Valid.Val2)
                @Html.ValidationMessageFor(m => m.EqualModelOfLongs_Valid.Val2)<br/>
                @Html.EditorFor(m => m.EqualModelOfLongs_Valid.Val3)
                @Html.ValidationMessageFor(m => m.EqualModelOfLongs_Valid.Val3)<br/>
                @Html.EditorFor(m => m.EqualModelOfLongs_Valid.Val4)
                @Html.ValidationMessageFor(m => m.EqualModelOfLongs_Valid.Val4)<br/>
            </div>
            <br />
            <p>[Equal/Longs/Invalid]</p>
            <div>
                @Html.EditorFor(m => m.EqualModelOfLongs_Invalid.Val1)
                @Html.ValidationMessageFor(m => m.EqualModelOfLongs_Invalid.Val1)<br/>
                @Html.EditorFor(m => m.EqualModelOfLongs_Invalid.Val2)
                @Html.ValidationMessageFor(m => m.EqualModelOfLongs_Invalid.Val2)<br/>
                @Html.EditorFor(m => m.EqualModelOfLongs_Invalid.Val3)
                @Html.ValidationMessageFor(m => m.EqualModelOfLongs_Invalid.Val3)<br/>
                @Html.EditorFor(m => m.EqualModelOfLongs_Invalid.Val4)
                @Html.ValidationMessageFor(m => m.EqualModelOfLongs_Invalid.Val4)<br/>
            </div>
            <br />
            <p>[Equal/Dates/Valid]</p>
            <div>
                @Html.EditorFor(m => m.EqualModelOfDates_Valid.Val1)
                @Html.ValidationMessageFor(m => m.EqualModelOfDates_Valid.Val1)<br/>
                @Html.EditorFor(m => m.EqualModelOfDates_Valid.Val2)
                @Html.ValidationMessageFor(m => m.EqualModelOfDates_Valid.Val2)<br/>
                @Html.EditorFor(m => m.EqualModelOfDates_Valid.Val3)
                @Html.ValidationMessageFor(m => m.EqualModelOfDates_Valid.Val3)<br/>
                @Html.EditorFor(m => m.EqualModelOfDates_Valid.Val4)
                @Html.ValidationMessageFor(m => m.EqualModelOfDates_Valid.Val4)<br/>
                @Html.EditorFor(m => m.EqualModelOfDates_Valid.Val5)
                @Html.ValidationMessageFor(m => m.EqualModelOfDates_Valid.Val5)<br/>
                @Html.EditorFor(m => m.EqualModelOfDates_Valid.Val6)
                @Html.ValidationMessageFor(m => m.EqualModelOfDates_Valid.Val6)<br/>
                @Html.EditorFor(m => m.EqualModelOfDates_Valid.Val7)
                @Html.ValidationMessageFor(m => m.EqualModelOfDates_Valid.Val7)<br/>
            </div>
            <br />
            <p>[Equal/Dates/Invalid]</p>
            <div>
                @Html.EditorFor(m => m.EqualModelOfDates_Invalid.Val1)
                @Html.ValidationMessageFor(m => m.EqualModelOfDates_Invalid.Val1)<br/>
                @Html.EditorFor(m => m.EqualModelOfDates_Invalid.Val2)
                @Html.ValidationMessageFor(m => m.EqualModelOfDates_Invalid.Val2)<br/>
                @Html.EditorFor(m => m.EqualModelOfDates_Invalid.Val3)
                @Html.ValidationMessageFor(m => m.EqualModelOfDates_Invalid.Val3)<br/>
                @Html.EditorFor(m => m.EqualModelOfDates_Invalid.Val4)
                @Html.ValidationMessageFor(m => m.EqualModelOfDates_Invalid.Val4)<br/>
                @Html.EditorFor(m => m.EqualModelOfDates_Invalid.Val5)
                @Html.ValidationMessageFor(m => m.EqualModelOfDates_Invalid.Val5)<br/>
                @Html.EditorFor(m => m.EqualModelOfDates_Invalid.Val6)
                @Html.ValidationMessageFor(m => m.EqualModelOfDates_Invalid.Val6)<br/>
                @Html.EditorFor(m => m.EqualModelOfDates_Invalid.Val7)
                @Html.ValidationMessageFor(m => m.EqualModelOfDates_Invalid.Val7)<br/>
            </div>
            <br />
            <p>[NotEqual/Strings/Valid]</p>
            <div>
                @Html.EditorFor(m => m.NotEqualModelOfStrings_Valid.Val1)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfStrings_Valid.Val1)<br/>
                @Html.EditorFor(m => m.NotEqualModelOfStrings_Valid.Val2)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfStrings_Valid.Val2)<br/>
                @Html.EditorFor(m => m.NotEqualModelOfStrings_Valid.Val3)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfStrings_Valid.Val3)
            </div>
            <br />
            <p>[NotEqual/Strings/Invalid]</p>
            <div>
                @Html.EditorFor(m => m.NotEqualModelOfStrings_Invalid.Val1)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfStrings_Invalid.Val1)<br/>
                @Html.EditorFor(m => m.NotEqualModelOfStrings_Invalid.Val2)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfStrings_Invalid.Val2)<br/>
                @Html.EditorFor(m => m.NotEqualModelOfStrings_Invalid.Val3)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfStrings_Invalid.Val3)
            </div>
            <br />
            <p>[NotEqual/Longs/Valid]</p>
            <div>
                @Html.EditorFor(m => m.NotEqualModelOfLongs_Valid.Val1)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfLongs_Valid.Val1)<br/>
                @Html.EditorFor(m => m.NotEqualModelOfLongs_Valid.Val2)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfLongs_Valid.Val2)<br/>
                @Html.EditorFor(m => m.NotEqualModelOfLongs_Valid.Val3)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfLongs_Valid.Val3)<br/>
                @Html.EditorFor(m => m.NotEqualModelOfLongs_Valid.Val4)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfLongs_Valid.Val4)<br/>
            </div>
            <br />
            <p>[NotEqual/Longs/Invalid]</p>
            <div>
                @Html.EditorFor(m => m.NotEqualModelOfLongs_Invalid.Val1)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfLongs_Invalid.Val1)<br/>
                @Html.EditorFor(m => m.NotEqualModelOfLongs_Invalid.Val2)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfLongs_Invalid.Val2)<br/>
                @Html.EditorFor(m => m.NotEqualModelOfLongs_Invalid.Val3)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfLongs_Invalid.Val3)<br/>
                @Html.EditorFor(m => m.NotEqualModelOfLongs_Invalid.Val4)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfLongs_Invalid.Val4)<br/>
            </div>
            <br />
            <p>[NotEqual/Dates/Valid]</p>
            <div>
                @Html.EditorFor(m => m.NotEqualModelOfDates_Valid.Val1)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfDates_Valid.Val1)<br/>
                @Html.EditorFor(m => m.NotEqualModelOfDates_Valid.Val2)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfDates_Valid.Val2)<br/>
                @Html.EditorFor(m => m.NotEqualModelOfDates_Valid.Val3)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfDates_Valid.Val3)<br/>
                @Html.EditorFor(m => m.NotEqualModelOfDates_Valid.Val4)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfDates_Valid.Val4)<br/>
                @Html.EditorFor(m => m.NotEqualModelOfDates_Valid.Val5)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfDates_Valid.Val5)<br/>
            </div>
            <br />
            <p>[NotEqual/Dates/Invalid]</p>
            <div>
                @Html.EditorFor(m => m.NotEqualModelOfDates_Invalid.Val1)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfDates_Invalid.Val1)<br/>
                @Html.EditorFor(m => m.NotEqualModelOfDates_Invalid.Val2)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfDates_Invalid.Val2)<br/>
                @Html.EditorFor(m => m.NotEqualModelOfDates_Invalid.Val3)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfDates_Invalid.Val3)<br/>
                @Html.EditorFor(m => m.NotEqualModelOfDates_Invalid.Val4)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfDates_Invalid.Val4)<br/>
                @Html.EditorFor(m => m.NotEqualModelOfDates_Invalid.Val5)
                @Html.ValidationMessageFor(m => m.NotEqualModelOfDates_Invalid.Val5)<br/>
            </div>
            <br />
            <p>[Greater/Longs/Valid]</p>
            <div>
                @Html.EditorFor(m => m.GreaterModelOfLongs_Valid.Val1)
                @Html.ValidationMessageFor(m => m.GreaterModelOfLongs_Valid.Val1)<br/>
                @Html.EditorFor(m => m.GreaterModelOfLongs_Valid.Val2)
                @Html.ValidationMessageFor(m => m.GreaterModelOfLongs_Valid.Val2)<br/>
            </div>
            <br />
            <p>[Greater/Longs/Invalid]</p>
            <div>
                @Html.EditorFor(m => m.GreaterModelOfLongs_Invalid.Val1)
                @Html.ValidationMessageFor(m => m.GreaterModelOfLongs_Invalid.Val1)<br/>
                @Html.EditorFor(m => m.GreaterModelOfLongs_Invalid.Val2)
                @Html.ValidationMessageFor(m => m.GreaterModelOfLongs_Invalid.Val2)<br/>
                @Html.EditorFor(m => m.GreaterModelOfLongs_Invalid.Val3)
                @Html.ValidationMessageFor(m => m.GreaterModelOfLongs_Invalid.Val3)<br/>
            </div>
            <br />
            <p>[Greater/Dates/Valid]</p>
            <div>
                @Html.EditorFor(m => m.GreaterModelOfDates_Valid.Val1)
                @Html.ValidationMessageFor(m => m.GreaterModelOfDates_Valid.Val1)<br/>
                @Html.EditorFor(m => m.GreaterModelOfDates_Valid.Val2)
                @Html.ValidationMessageFor(m => m.GreaterModelOfDates_Valid.Val2)<br/>
                @Html.EditorFor(m => m.GreaterModelOfDates_Valid.Val3)
                @Html.ValidationMessageFor(m => m.GreaterModelOfDates_Valid.Val3)
            </div>
            <br />
            <p>[Greater/Dates/Invalid]</p>
            <div>
                @Html.EditorFor(m => m.GreaterModelOfDates_Invalid.Val1)
                @Html.ValidationMessageFor(m => m.GreaterModelOfDates_Invalid.Val1)<br/>
                @Html.EditorFor(m => m.GreaterModelOfDates_Invalid.Val2)
                @Html.ValidationMessageFor(m => m.GreaterModelOfDates_Invalid.Val2)<br/>
                @Html.EditorFor(m => m.GreaterModelOfDates_Invalid.Val3)
                @Html.ValidationMessageFor(m => m.GreaterModelOfDates_Invalid.Val3)<br/>>
                @Html.EditorFor(m => m.GreaterModelOfDates_Invalid.Val4)
                @Html.ValidationMessageFor(m => m.GreaterModelOfDates_Invalid.Val4)
            </div>
            <br />
            <p>[Greater/DatesAsStrings/Valid]</p>
            <div>
                @Html.EditorFor(m => m.GreaterModelOfDatesAsStrings_Valid.Val1)
                @Html.ValidationMessageFor(m => m.GreaterModelOfDatesAsStrings_Valid.Val1)<br/>
                @Html.EditorFor(m => m.GreaterModelOfDatesAsStrings_Valid.Val2)
                @Html.ValidationMessageFor(m => m.GreaterModelOfDatesAsStrings_Valid.Val2)<br/>
                @Html.EditorFor(m => m.GreaterModelOfDatesAsStrings_Valid.Val3)
                @Html.ValidationMessageFor(m => m.GreaterModelOfDatesAsStrings_Valid.Val3)
            </div>
            <br />
            <p>[Greater/DatesAsStrings/Invalid]</p>
            <div>
                @Html.EditorFor(m => m.GreaterModelOfDatesAsStrings_Invalid.Val1)
                @Html.ValidationMessageFor(m => m.GreaterModelOfDatesAsStrings_Invalid.Val1)<br/>
                @Html.EditorFor(m => m.GreaterModelOfDatesAsStrings_Invalid.Val2)
                @Html.ValidationMessageFor(m => m.GreaterModelOfDatesAsStrings_Invalid.Val2)<br/>
                @Html.EditorFor(m => m.GreaterModelOfDatesAsStrings_Invalid.Val3)
                @Html.ValidationMessageFor(m => m.GreaterModelOfDatesAsStrings_Invalid.Val3)<br/>
                @Html.EditorFor(m => m.GreaterModelOfDatesAsStrings_Invalid.Val4)
                @Html.ValidationMessageFor(m => m.GreaterModelOfDatesAsStrings_Invalid.Val4)
            </div>
            <!-- Less -->
            <br />
            <p>[Less/Longs/Valid]</p>
            <div>
                @Html.EditorFor(m => m.LessModelOfLongs_Valid.Val1)
                @Html.ValidationMessageFor(m => m.LessModelOfLongs_Valid.Val1)<br/>
                @Html.EditorFor(m => m.LessModelOfLongs_Valid.Val2)
                @Html.ValidationMessageFor(m => m.LessModelOfLongs_Valid.Val2)<br/>
            </div>
            <br />
            <p>[Less/Longs/Invalid]</p>
            <div>
                @Html.EditorFor(m => m.LessModelOfLongs_Invalid.Val1)
                @Html.ValidationMessageFor(m => m.LessModelOfLongs_Invalid.Val1)<br/>
                @Html.EditorFor(m => m.LessModelOfLongs_Invalid.Val2)
                @Html.ValidationMessageFor(m => m.LessModelOfLongs_Invalid.Val2)<br/>
                @Html.EditorFor(m => m.LessModelOfLongs_Invalid.Val3)
                @Html.ValidationMessageFor(m => m.LessModelOfLongs_Invalid.Val3)<br/>
            </div>
            <br />
            <p>[Less/Dates/Valid]</p>
            <div>
                @Html.EditorFor(m => m.LessModelOfDates_Valid.Val1)
                @Html.ValidationMessageFor(m => m.LessModelOfDates_Valid.Val1)<br/>
                @Html.EditorFor(m => m.LessModelOfDates_Valid.Val2)
                @Html.ValidationMessageFor(m => m.LessModelOfDates_Valid.Val2)<br/>
                @Html.EditorFor(m => m.LessModelOfDates_Valid.Val3)
                @Html.ValidationMessageFor(m => m.LessModelOfDates_Valid.Val3)
            </div>
            <br />
            <p>[Less/Dates/Invalid]</p>
            <div>
                @Html.EditorFor(m => m.LessModelOfDates_Invalid.Val1)
                @Html.ValidationMessageFor(m => m.LessModelOfDates_Invalid.Val1)<br/>
                @Html.EditorFor(m => m.LessModelOfDates_Invalid.Val2)
                @Html.ValidationMessageFor(m => m.LessModelOfDates_Invalid.Val2)<br/>
                @Html.EditorFor(m => m.LessModelOfDates_Invalid.Val3)
                @Html.ValidationMessageFor(m => m.LessModelOfDates_Invalid.Val3)<br/>
                @Html.EditorFor(m => m.LessModelOfDates_Invalid.Val4)
                @Html.ValidationMessageFor(m => m.LessModelOfDates_Invalid.Val4)
            </div>
            <br />
            <p>[Less/DatesAsStrings/Valid]</p>
            <div>
                @Html.EditorFor(m => m.LessModelOfDatesAsStrings_Valid.Val1)
                @Html.ValidationMessageFor(m => m.LessModelOfDatesAsStrings_Valid.Val1)<br/>
                @Html.EditorFor(m => m.LessModelOfDatesAsStrings_Valid.Val2)
                @Html.ValidationMessageFor(m => m.LessModelOfDatesAsStrings_Valid.Val2)<br/>
                @Html.EditorFor(m => m.LessModelOfDatesAsStrings_Valid.Val3)
                @Html.ValidationMessageFor(m => m.LessModelOfDatesAsStrings_Valid.Val3)
            </div>
            <br />
            <p>[Less/DatesAsStrings/Invalid]</p>
            <div>
                @Html.EditorFor(m => m.LessModelOfDatesAsStrings_Invalid.Val1)
                @Html.ValidationMessageFor(m => m.LessModelOfDatesAsStrings_Invalid.Val1)<br/>
                @Html.EditorFor(m => m.LessModelOfDatesAsStrings_Invalid.Val2)
                @Html.ValidationMessageFor(m => m.LessModelOfDatesAsStrings_Invalid.Val2)<br/>
                @Html.EditorFor(m => m.LessModelOfDatesAsStrings_Invalid.Val3)
                @Html.ValidationMessageFor(m => m.LessModelOfDatesAsStrings_Invalid.Val3)<br/>
                @Html.EditorFor(m => m.LessModelOfDatesAsStrings_Invalid.Val4)
                @Html.ValidationMessageFor(m => m.LessModelOfDatesAsStrings_Invalid.Val4)
            </div>
            <br/>
            <p>[GreaterOrEqual/Longs/Valid]</p>
            <div>
                @Html.EditorFor(m => m.GreaterOrEqualModelOfLongs_Valid.Val1)
                @Html.ValidationMessageFor(m => m.GreaterOrEqualModelOfLongs_Valid.Val1)<br/>
                @Html.EditorFor(m => m.GreaterOrEqualModelOfLongs_Valid.Val2)
                @Html.ValidationMessageFor(m => m.GreaterOrEqualModelOfLongs_Valid.Val2)<br/>
                @Html.EditorFor(m => m.GreaterOrEqualModelOfLongs_Valid.Val3)
                @Html.ValidationMessageFor(m => m.GreaterOrEqualModelOfLongs_Valid.Val3)<br/>
            </div>
            <br />
            <p>[GreaterOrEqual/Longs/Invalid]</p>
            <div>
                @Html.EditorFor(m => m.GreaterOrEqualModelOfLongs_Invalid.Val1)
                @Html.ValidationMessageFor(m => m.GreaterOrEqualModelOfLongs_Invalid.Val1)<br/>
                @Html.EditorFor(m => m.GreaterOrEqualModelOfLongs_Invalid.Val2)
                @Html.ValidationMessageFor(m => m.GreaterOrEqualModelOfLongs_Invalid.Val2)<br/>
            </div>
            <br />
            <p>[GreaterOrEqual/Dates/Valid]</p>
            <div>
                @Html.EditorFor(m => m.GreaterOrEqualModelOfDates_Valid.Val1)
                @Html.ValidationMessageFor(m => m.GreaterOrEqualModelOfDates_Valid.Val1)<br/>
                @Html.EditorFor(m => m.GreaterOrEqualModelOfDates_Valid.Val2)
                @Html.ValidationMessageFor(m => m.GreaterOrEqualModelOfDates_Valid.Val2)<br/>
                @Html.EditorFor(m => m.GreaterOrEqualModelOfDates_Valid.Val3)
                @Html.ValidationMessageFor(m => m.GreaterOrEqualModelOfDates_Valid.Val3)<br/>
                @Html.EditorFor(m => m.GreaterOrEqualModelOfDates_Valid.Val4)
                @Html.ValidationMessageFor(m => m.GreaterOrEqualModelOfDates_Valid.Val4)
            </div>
            <br />
            <p>[GreaterOrEqual/Dates/Invalid]</p>
            <div>
                @Html.EditorFor(m => m.GreaterOrEqualModelOfDates_Invalid.Val1)
                @Html.ValidationMessageFor(m => m.GreaterOrEqualModelOfDates_Invalid.Val1)<br/>
                @Html.EditorFor(m => m.GreaterOrEqualModelOfDates_Invalid.Val2)
                @Html.ValidationMessageFor(m => m.GreaterOrEqualModelOfDates_Invalid.Val2)<br/>
                @Html.EditorFor(m => m.GreaterOrEqualModelOfDates_Invalid.Val3)
                @Html.ValidationMessageFor(m => m.GreaterOrEqualModelOfDates_Invalid.Val3)<br/>>
            </div>
            <br />
            <p>[GreaterOrEqual/DatesAsStrings/Valid]</p>
            <div>
                @Html.EditorFor(m => m.GreaterOrEqualModelOfDatesAsStrings_Valid.Val1)
                @Html.ValidationMessageFor(m => m.GreaterOrEqualModelOfDatesAsStrings_Valid.Val1)<br/>
                @Html.EditorFor(m => m.GreaterOrEqualModelOfDatesAsStrings_Valid.Val2)
                @Html.ValidationMessageFor(m => m.GreaterOrEqualModelOfDatesAsStrings_Valid.Val2)<br/>
                @Html.EditorFor(m => m.GreaterOrEqualModelOfDatesAsStrings_Valid.Val3)
                @Html.ValidationMessageFor(m => m.GreaterOrEqualModelOfDatesAsStrings_Valid.Val3)<br />
                @Html.EditorFor(m => m.GreaterOrEqualModelOfDatesAsStrings_Valid.Val4)
                @Html.ValidationMessageFor(m => m.GreaterOrEqualModelOfDatesAsStrings_Valid.Val4)
            </div>
            <br />
            <p>[GreaterOrEqual/DatesAsStrings/Invalid]</p>
            <div>
                @Html.EditorFor(m => m.GreaterOrEqualModelOfDatesAsStrings_Invalid.Val1)
                @Html.ValidationMessageFor(m => m.GreaterOrEqualModelOfDatesAsStrings_Invalid.Val1)<br/>
                @Html.EditorFor(m => m.GreaterOrEqualModelOfDatesAsStrings_Invalid.Val2)
                @Html.ValidationMessageFor(m => m.GreaterOrEqualModelOfDatesAsStrings_Invalid.Val2)<br/>
                @Html.EditorFor(m => m.GreaterOrEqualModelOfDatesAsStrings_Invalid.Val3)
                @Html.ValidationMessageFor(m => m.GreaterOrEqualModelOfDatesAsStrings_Invalid.Val3)<br/>
            </div>
            <br />
            <p>[LessOrEqual/Longs/Valid]</p>
            <div>
                @Html.EditorFor(m => m.LessOrEqualModelOfLongs_Valid.Val1)
                @Html.ValidationMessageFor(m => m.LessOrEqualModelOfLongs_Valid.Val1)<br/>
                @Html.EditorFor(m => m.LessOrEqualModelOfLongs_Valid.Val2)
                @Html.ValidationMessageFor(m => m.LessOrEqualModelOfLongs_Valid.Val2)<br/>
                @Html.EditorFor(m => m.LessOrEqualModelOfLongs_Valid.Val3)
                @Html.ValidationMessageFor(m => m.LessOrEqualModelOfLongs_Valid.Val3)<br/>
            </div>
            <br />
            <p>[LessOrEqual/Longs/Invalid]</p>
            <div>
                @Html.EditorFor(m => m.LessOrEqualModelOfLongs_Invalid.Val1)
                @Html.ValidationMessageFor(m => m.LessOrEqualModelOfLongs_Invalid.Val1)<br/>
                @Html.EditorFor(m => m.LessOrEqualModelOfLongs_Invalid.Val2)
                @Html.ValidationMessageFor(m => m.LessOrEqualModelOfLongs_Invalid.Val2)<br/>
            </div>
            <br />
            <p>[LessOrEqual/Dates/Valid]</p>
            <div>
                @Html.EditorFor(m => m.LessOrEqualModelOfDates_Valid.Val1)
                @Html.ValidationMessageFor(m => m.LessOrEqualModelOfDates_Valid.Val1)<br/>
                @Html.EditorFor(m => m.LessOrEqualModelOfDates_Valid.Val2)
                @Html.ValidationMessageFor(m => m.LessOrEqualModelOfDates_Valid.Val2)<br/>
                @Html.EditorFor(m => m.LessOrEqualModelOfDates_Valid.Val3)
                @Html.ValidationMessageFor(m => m.LessOrEqualModelOfDates_Valid.Val3)<br />
                @Html.EditorFor(m => m.LessOrEqualModelOfDates_Valid.Val4)
                @Html.ValidationMessageFor(m => m.LessOrEqualModelOfDates_Valid.Val4)
            </div>
            <br />
            <p>[LessOrEqual/Dates/Invalid]</p>
            <div>
                @Html.EditorFor(m => m.LessOrEqualModelOfDates_Invalid.Val1)
                @Html.ValidationMessageFor(m => m.LessOrEqualModelOfDates_Invalid.Val1)<br/>
                @Html.EditorFor(m => m.LessOrEqualModelOfDates_Invalid.Val2)
                @Html.ValidationMessageFor(m => m.LessOrEqualModelOfDates_Invalid.Val2)<br/>
                @Html.EditorFor(m => m.LessOrEqualModelOfDates_Invalid.Val3)
                @Html.ValidationMessageFor(m => m.LessOrEqualModelOfDates_Invalid.Val3)<br/>
            </div>
            <br />
            <p>[LessOrEqual/DatesAsStrings/Valid]</p>
            <div>
                @Html.EditorFor(m => m.LessOrEqualModelOfDatesAsStrings_Valid.Val1)
                @Html.ValidationMessageFor(m => m.LessOrEqualModelOfDatesAsStrings_Valid.Val1)<br/>
                @Html.EditorFor(m => m.LessOrEqualModelOfDatesAsStrings_Valid.Val2)
                @Html.ValidationMessageFor(m => m.LessOrEqualModelOfDatesAsStrings_Valid.Val2)<br/>
                @Html.EditorFor(m => m.LessOrEqualModelOfDatesAsStrings_Valid.Val3)
                @Html.ValidationMessageFor(m => m.LessOrEqualModelOfDatesAsStrings_Valid.Val3)<br/>
                @Html.EditorFor(m => m.LessOrEqualModelOfDatesAsStrings_Valid.Val4)
                @Html.ValidationMessageFor(m => m.LessOrEqualModelOfDatesAsStrings_Valid.Val4)
            </div>
            <br />
            <p>[LessOrEqual/DatesAsStrings/Invalid]</p>
            <div>
                @Html.EditorFor(m => m.LessOrEqualModelOfDatesAsStrings_Invalid.Val1)
                @Html.ValidationMessageFor(m => m.LessOrEqualModelOfDatesAsStrings_Invalid.Val1)<br/>
                @Html.EditorFor(m => m.LessOrEqualModelOfDatesAsStrings_Invalid.Val2)
                @Html.ValidationMessageFor(m => m.LessOrEqualModelOfDatesAsStrings_Invalid.Val2)<br/>
                @Html.EditorFor(m => m.LessOrEqualModelOfDatesAsStrings_Invalid.Val3)
                @Html.ValidationMessageFor(m => m.LessOrEqualModelOfDatesAsStrings_Invalid.Val3)<br/>
            </div>
        }
    </div>

